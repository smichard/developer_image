# Use a Go image for building
FROM golang:1.20 as builder

# Clone and build kubedock
WORKDIR /src
RUN git clone https://github.com/joyrex2001/kubedock.git
WORKDIR /src/kubedock
RUN make build

# Use CentOS Stream 9 as the base image
FROM centos:stream9

# Set to root user
USER 0

# Install epel-release and update
RUN dnf -y install epel-release && \
    dnf -y update

# Install required tools and dependencies
RUN dnf install -y git make curl unzip zip which podman buildah skopeo java-11-openjdk-devel --allowerasing

# Install Skaffold
RUN curl -sSL https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64 -o /usr/local/bin/skaffold && \
    chmod +x /usr/local/bin/skaffold

# Install OpenShift CLI (oc) and kubectl
RUN curl -sSL https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux.tar.gz -o /tmp/oc.tar.gz && \
    tar -C /usr/local/bin -xzf /tmp/oc.tar.gz oc kubectl && \
    rm /tmp/oc.tar.gz

# Copy kubedock binary from builder stage
COPY --from=builder /src/kubedock/kubedock /usr/local/bin/kubedock
RUN chmod +x /usr/local/bin/kubedock

# Ensure the /home/user directory exists
RUN mkdir -p /home/user && chown 10001:10001 /home/user

# Switch to non-root user for SDKMAN installation
USER 10001

# Set home for the user
ENV HOME /home/user

# Install SDKMAN for the non-root user
RUN curl -s "https://get.sdkman.io" | bash

# Ensure SDKMAN is set up and install desired Java version
RUN bash -c "source $HOME/.sdkman/bin/sdkman-init.sh && sdk install java 17.0.3-tem && sdk default java 17.0.3-tem"

# Returning to root user to continue installations
USER 0

# Default command
CMD while [ ! -f /home/user/.kube/config ]; do sleep 1; done; kubedock server --port-forward
